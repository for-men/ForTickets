plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.10'
    id 'io.spring.dependency-management' version '1.1.6'
}

bootJar {
    enabled = false
}

group = 'com.fortickets'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

// 현재의 root 프로젝트와 앞으로 추가될 서브 모듈에 대한 설정
allprojects {
    sourceCompatibility = '17'
    targetCompatibility = '17'

    repositories {
        mavenCentral()
    }

}

subprojects {

    // apply plugin: Gradle에 특정 기능을 추가하는 플러그인을 적용
    apply plugin: 'java'
    // api 사용하기 위해 추가
    apply plugin: 'java-library'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    // 모든 서브 모듈에서 사용될 공통 의존성들을 추가함
    dependencies {
        // lombok
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'

        // mapStruct
        implementation 'org.mapstruct:mapstruct:1.5.5.Final'
        annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

        // Test
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

        // module
        if (project.name != 'gateway-service') {
            // spring web mvc
            implementation 'org.springframework.boot:spring-boot-starter'
            implementation 'org.springframework.boot:spring-boot-starter-web'
        }
        if (project.name != 'common') {
            implementation project(':component:common')
        }

    }

    ext {
        set('springCloudVersion', "2023.0.0")
        set('eurekaClientVersion', "4.1.0")
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }

    // 모든 서브 모듈에서 Junit을 사용하기 위한 설정
    test {
        useJUnitPlatform()
    }
}
